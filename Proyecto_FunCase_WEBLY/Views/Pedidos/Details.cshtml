@model Proyecto_FunCase_WEBLY.Models.Pedido

@{
    ViewBag.Title = "Detalle de Pedido";
}

@if (User.IsInRole("Cliente"))
{
    <h2>Detalle del Pedido</h2>
}
else
{
    <h2>Detalle del Pedido: @Model.PedidoID</h2>
}
<link href="/Content/stripe.css"/>

<script defer src="https://js.stripe.com/v3/"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=fetch"></script>

<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-6">
        <h3>Datos del pedido</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Pedido Realizado por</th>
                    <th>@Model.Cliente.User.Nombre @Model.Cliente.User.Apellido1 @Model.Cliente.User.Apellido2</th>
                </tr>
                <tr>
                    <th>Total</th>
                    <th>@Model.Total</th>
                </tr>
                <tr>
                    <th>Estatus del Pedido</th>
                    <th>@Model.EstatusPedido</th>
                </tr>
                <tr>
                    <th>Metodo de pago</th>
                    <th>@Model.MetodoPago.Nombre</th>
                </tr>
                <tr>
                    <th>Estatus del Pago</th>
                    <th>@Model.EstatusPago</th>
                </tr>
            </thead>
        </table>
    </div>

    @if (User.IsInRole("Cliente"))
    {
        <div class="col-lg-6 col-md-6 col-sm-6" id="divPayment" style="display: none">
            <form id="payment-form">

                <div id="card-element"><!--Stripe.js injects the Card Element--></div>

                <button id="submit" class="button-stripe">

                    <div class="spinner hidden" id="spinner"></div>

                    <span id="button-text">Pagar</span>

                </button>

                <p id="card-error" role="alert"></p>

                <p class="result-message hidden">

                    Payment succeeded, see the result in your

                    <a href="" target="_blank">Stripe dashboard.</a> Refresh the page to pay again.

                </p>

            </form>
        </div>
    }
    <div class="col-lg-6 col-md-6 col-sm-6">
        <h3>
            Domicilio
        </h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Calle:</th>
                    <th>@Model.Direccion.Calle</th>
                    <th>Num. Ext.:</th>
                    <th>@Model.Direccion.NumeroExt</th>
                </tr>
                <tr>
                    <th>Num. Int.:</th>
                    <th>@Model.Direccion.Calle</th>
                    <th>Colonia</th>
                    <th>@Model.Direccion.Colonia</th>
                </tr>
                <tr>
                    <th>Código Postal</th>
                    <th>@Model.Direccion.CodigoPostal</th>
                    <th>Ciudad</th>
                    <th>@Model.Direccion.Ciudad</th>
                <tr>
                    <th>Estado</th>
                    <th>@Model.Direccion.Estado.Nombre</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<h3>
    Detalles
</h3>
<div class="row">
    <table class="table">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Imagen</th>
                <th>Precio</th>
                <th>Cantidad</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.DetallesPedidos != null)
            {
                foreach (var detalle in Model.DetallesPedidos)
                {
                    <tr>
                        <td>@detalle.Producto.Nombre</td>
                        <td><img class="img-responsive" src="@detalle.Funda_Disenos.FirstOrDefault().Imagen" alt="Imagen del Producto" style="height: 250px" /></td>
                        <td>@detalle.PrecioUnitario</td>
                        <td>@detalle.Cantidad</td>
                        <td>@(detalle.PrecioUnitario * detalle.Cantidad)</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<input type="hidden" id="doPayment" value="@Model.EstatusPago" />

@Html.HiddenFor(model => model.PedidoID)

<p>
    @Html.ActionLink("Volver al Listado", "Index")
</p>

<script>

    window.onload = () => {
        if (document.getElementById("doPayment").value === "Generado") {
            document.getElementById("divPayment").style.display = 'block';
            getStripeSecret();
        } else {

            console.log("no entre")
        }

    }


    const getStripeSecret = () => {

        const url = "@Url.Action("getStripeSecret", "Carrito")";
        const idPedido = document.getElementById("PedidoID").value;

        fetch(`${url}?idPedido=${idPedido}`, {
            method: 'GET',
        }).then(data => data.json()).then(data => {
            console.log(data);
            paymentStripe(data);
        }).catch(error => {
            console.log(error);
        })

    }

    const paymentStripe = (data) => {
        const stripeKey = Stripe("pk_test_51HGCWwCm1gD1SlZxYA0baoh9iUPyiqjbc2x02laWKCqvJE2zNjWmQ0u1ll8aNBVps93xQVqx8fiaZ6xNaYqPWkWV00jisCu3XS");

        var elements = stripeKey.elements();

        const style = {

            base: {

                color: "#32325d",

                fontFamily: 'Arial, sans-serif',

                fontSmoothing: "antialiased",

                fontSize: "16px",

                "::placeholder": {

                    color: "#32325d"

                }

            },

            invalid: {

                fontFamily: 'Arial, sans-serif',

                color: "#fa755a",

                iconColor: "#fa755a"

            }

        };

        const card = elements.create("card", { style: style });

        // Stripe injects an iframe into the DOM

        card.mount("#card-element");

        card.on("change", function (event) {

            // Disable the Pay button if there are no card details in the Element

            document.querySelector("button").disabled = event.empty;

            document.querySelector("#card-error").textContent = event.error ? event.error.message : "";

        });

        const form = document.getElementById("payment-form");

        form.addEventListener("submit", function (event) {

            event.preventDefault();

            // Complete payment when the submit button is clicked

            payWithCard(stripeKey, card, data.secret);

        });
    }

    const payWithCard = function (stripe, card, clientSecret) {

        loading(true);

        stripe

            .confirmCardPayment(clientSecret, {

                payment_method: {

                    card: card

                }

            })

            .then(function (result) {

                if (result.error) {

                    // Show error to your customer
                    showError(result.error.message);
                    updatePayment(false)
                } else {

                    // The payment succeeded!
                    updatePayment(true, result.paymentIntent.id);
                }

            });

    };

    const updatePayment = (status, paymentIntentId = null) => {

        const idPedido = document.getElementById("PedidoID").value;
        const url = "@Url.Action("UpdatePayment", "Pedidos")";
        fetch(`${url}?status=${status}&paymentIntentId=${paymentIntentId}&idPedido=${idPedido}`, {
            method: 'POST',          
            headers: {
                'contentType': 'application/json; charset=utf-8'
            }
        }).then(data => data.json()).then(data => {
            window.location.reload();
            //orderComplete(paymentIntentId);
        }).catch(error => {
            showError("Error al Registrar tu pago :c, contacta a soporte");
        });
    }

    // Shows a success message when the payment is complete
    var orderComplete = function (paymentIntentId) {

        loading(false);

        document

            .querySelector(".result-message a")

            .setAttribute(

                "href",

                "https://dashboard.stripe.com/test/payments/" + paymentIntentId

            );

        document.querySelector(".result-message").classList.remove("hidden");

        document.querySelector("button").disabled = true;

    };

    // Show the customer the error from Stripe if their card fails to charge

    var showError = function (errorMsgText) {

        loading(false);

        var errorMsg = document.querySelector("#card-error");

        errorMsg.textContent = errorMsgText;

        setTimeout(function () {

            errorMsg.textContent = "";

        }, 4000);

    };

    // Show a spinner on payment submission

    var loading = function (isLoading) {

        if (isLoading) {

            // Disable the button and show a spinner

            document.querySelector("button").disabled = true;

            document.querySelector("#spinner").classList.remove("hidden");

            document.querySelector("#button-text").classList.add("hidden");

        } else {

            document.querySelector("button").disabled = false;

            document.querySelector("#spinner").classList.add("hidden");

            document.querySelector("#button-text").classList.remove("hidden");

        }

    };




</script>