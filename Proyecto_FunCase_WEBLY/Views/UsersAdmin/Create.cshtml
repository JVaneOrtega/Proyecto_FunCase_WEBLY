@model IdentitySample.Models.RegisterViewModel
@{
    ViewBag.Title = "Crear";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Crear</h3>
                <p class="text-subtitle text-muted">Dar de alta un nuevo Empleado.</p>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end float-md-end float-sm-end">
                    <ol class="breadcrumb breadcrumb-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("IndexAdmin", "Home")">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "UsersAdmin")">Empleados</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Crear</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<section>
    <div class="row match-height">
        <div class="col-lg-6 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <h4>Ingrese los datos</h4>
                </div>
                <div class="card-content">
                    <div class="card-body">

                        @using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new { @class = "form form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-body">
                                @Html.ValidationSummary("", new { @class = "text-error" })

                                @Html.HiddenFor(model => model.Tipo)
                                <div class="row">
                                    <div class="col-12 form-group">
                                        <h6 class="card-subtitle">Datos personales</h6>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.Nombre)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.Apellido1)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.TextBoxFor(model => model.Apellido1, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.Apellido2)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.TextBoxFor(model => model.Apellido2, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.Telefono)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <hr />
                                    <div class="col-12 form-group">
                                        <h6 class="card-subtitle">Datos de usuario</h6>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.Email)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.Password)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        @Html.LabelFor(model => model.ConfirmPassword)
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "form-text text-danger" })
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-6">
                                        <label>Selecciona Rol del Usuario</label>
                                    </div>
                                    <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                        @foreach (var item in (SelectList)ViewBag.RoleId)
                                        {
                                            <input type="radio" name="SelectedRoles" id="SelectedRoles" value="@item.Value" class="form-check-input" />
                                            @Html.Label(item.Value, new { @class = "form-check-label" })
                                        }
                                    </div>
                                    <div class="card-footer d-flex justify-content-between">
                                        <div class="col-12 d-flex justify-content-end">
                                            <button type="submit" class="btn btn-primary rounded-pill me-1 mb-1">Guardar</button>
                                            @Html.ActionLink("Volver al Listado", "Index", null, new { @class = "btn btn-light-secondary rounded-pill me-1 mb-1" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        document.getElementsByName("SelectedRoles")[0].onchange = (e) => {
            var tipo = document.getElementsByName("SelectedRoles")[0].value;
            document.getElementById("Tipo").value = tipo;
        }

        document.getElementsByName("SelectedRoles")[1].onchange = (e) => {
            var tipo = document.getElementsByName("SelectedRoles")[1].value;
            document.getElementById("Tipo").value = tipo;
        }
    </script>
}
