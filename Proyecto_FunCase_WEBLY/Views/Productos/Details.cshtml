@model Proyecto_FunCase_WEBLY.Models.ProductoDetalle

@{
    ViewBag.Title = "Detalles";
}

@if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Empleado")))
{
    <h2>Detalles.</h2>

    <div>
        <h4>Producto</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Producto.ImagenFinal)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Producto.ImagenFinal)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Producto.Nombre)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Producto.Nombre)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Producto.Total)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Producto.Total)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Producto.Stock)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Producto.Stock)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Editar", "Edit", new { id = Model.Producto.ProductoID }) |
        @Html.ActionLink("Volver al Listado", "Index")
    </p>
}
else
{

    <div class="col-lg-12 col-md-12 col-sm-12">
        <h2>@Model.Producto.Nombre</h2>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-4">
                <canvas style="margin-top: 10px; z-index: 9999" width="500" height="600" id="canvas"></canvas>
                <img class="img-responsive" src="@Model.Producto.ImagenFinal" alt="Imagen del Producto" id="imagenProducto" style="display:none" />
            </div>
            <div class="col-lg-6 col-md-6 col-sm-8">
                <h3>Datos del Producto</h3>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Nombre:</b> @Model.Producto.Nombre</p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Modelo:</b> @Model.Producto.Modelo.Nombre</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Material:</b> @Model.Producto.Material.Nombre</p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Color:</b> @Model.Producto.Material.Color</p>
                    </div>
                </div>
                <hr />
                <h4>Imagen</h4>
                <div class="row">
                    <div class="col-md-6 col-sm-6">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="designerIlustration" checked>
                            <label class="form-check-label" for="flexRadioDefault1">
                                Usar la Ilustración del diseñador
                            </label>

                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="userIlustration">
                            <label class="form-check-label" for="flexRadioDefault1">
                                Usar mi Ilustración / Imagen
                            </label>

                        </div>
                    </div>
                </div>
               
             
                <div class="mb-3 row" id="divImageUser" style="display: none">
                    <label class="form-label col-lg-5 col-md-4 col-sm-4 col-form-label">Sube tu imagen</label>
                    <input type="file" class="form-control" id="userImage" />
                </div>
                <div class="mb-3 row" id="divImageDesigner">
                    <label class="form-label col-lg-5 col-md-4 col-sm-4 col-form-label">Selecciona una imagen</label>
                    <div class="col-lg-7 col-md-8 col-sm-8 mb-2">
                        <select id="Imagen" name="Imagen" class="form-control">
                            @foreach (var imagen in Model.Imagenes)
                            {
                                <option value="@imagen.Ruta;@imagen.ImagenID">@imagen.NombreImagen</option>
                            }
                        </select>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <img id="PreviewImagen" class="img-responsive" src="@Model.Imagenes.FirstOrDefault().Ruta" alt="Imagen" style="height: 150px;" />
                        </div>
                    </div>
                </div>
                
                <hr />

                <div class="row">
                    <input type="hidden" id="idProducto" value="@Model.Producto.ProductoID" />
                    <label class="form-label col-lg-3 col-md-3 col-sm-3 col-form-label">Cantidad:</label>
                    <div class="col-lg-4 col-md-4 col-sm-4">
                        <input type="number" class="form-control numbers" id="cantidad" min="0" step="1" value="1" />
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-3">
                        <button class="agregar btn btn-primary" id="btnAgregar">Agregar</button>
                    </div>
                </div>

            </div>
        </div>
    </div>

    @section Scripts
    {
        <script>
            $("#Imagen").on("change", function () {
                let data = this.value.split(";");
                let ruta = data[0];
                $("#PreviewImagen").attr("src", ruta)
            });

            $("#btnAgregar").on("click", function (evemt) {
                event.preventDefault();
                var ProductoId = $("#idProducto").val();
                var cantidad = $("#cantidad").val();
                var ImagenId = $("#Imagen").val().split(";")[1];

                $.ajax(
                {
                    url: "@Url.Action("AgregaCarrito", "Carrito")",
                    data: { idProducto: ProductoId, idImagen: ImagenId, cantidad: cantidad },
                    type: "POST",
                    success: function (response) {
                        window.location.href = "@Url.Action("AgregaCarrito", "Carrito")";
                    },
                        error: function (err, error) {
                            alert(err.responseText);
                    }
                });
            });

            //Método de validación para el campo de cantidad
            $(".numbers").keydown(function (e) {
                //alert(e.keyCode);
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 40]) !== -1 ||
                    (e.keyCode == 65 && e.ctrlkey === true) ||
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    return;
                }

                if ((e.shiftkey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 165)) {
                    e.preventDefault();
                }
            });

            var productImageSetted = null;
            var userDesigImageSetted = null;
            var listenMove = true;
            var isVertical = true;

            const encoded = (file) => {

                return new Promise((resolve, reject) => {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        //$('#blah').attr('src', e.target.result); // Renderizamos la imagen            
                        resolve(e.target.result);
                    }
                    reader.readAsDataURL(file);
                })

            }
           

            const changeCanvasImage = async(e) => {
                let newImg = null;
                //const canvas = document.getElementById('canvas');
                if (e.target.id === "userImage") {
                    
                    newImg = document.getElementById("userImage").files[0];
                    newImg = await encoded(newImg);
                  
                } else {
                    newImg = document.getElementById("PreviewImagen").src;
                  
                }
              
                const productImage = document.getElementById('imagenProducto').src;
                            
                loadCanvas(productImage, newImg)
            }

            const loadImage = url => {
                return new Promise((resolve, reject) => {
                    const img = new Image();
                    img.onload = () => resolve(img);
                    img.onerror = () => reject(`load ${url} fail`);
                    img.src = url;
                });
            };

            const loadCanvas = async (productImage, newImage, newPositions = null ) => {
                productImageSetted = productImage;
                userDesigImageSetted = newImage;
                const canvas = document.getElementById('canvas');
                              
                const img1 = await loadImage(productImage);                
                const ctx1 = canvas.getContext('2d');                
                ctx1.drawImage(img1, 0, 0, 492, 492);
              
                const img2 = await loadImage(newImage)
                const ctx2 = canvas.getContext('2d');
                
                const porcentajeHeight = (img2.height * 100) / img2.width;
                const relacion = 100 - porcentajeHeight; // = 30
                //console.log(newPositions)
                if (newPositions !== null) {
                    let { xFixed, yFixed } = newPositions;
                    
                    if (relacion > 25) {
                        console.log(img2.height)
                        if (yFixed > img2.height) {

                            yFixed = img2.height;
                        }
                        isVertical = false;
                        ctx2.drawImage(img2, xFixed , yFixed , 350, 150, 150, 160, 183, 150);
                    } else {
                        isVertical = true;
                        ctx2.drawImage(img2, 150, 50, 185, 400);
                    }
                } else {
                    if (relacion > 25) {
                        isVertical = false;
                        ctx2.drawImage(img2, 150, 50, 350, 150, 150, 160, 183, 150);
                    } else {
                        isVertical = true;
                        ctx2.drawImage(img2, 150, 50, 185, 400);
                    }
                }

                
                
            }

            document.getElementById("Imagen").addEventListener('change', changeCanvasImage);
            document.getElementById("userImage").addEventListener('change', changeCanvasImage);

            window.onload = () => {
                const firstImagen = document.getElementById('PreviewImagen').src;
                const productImage = document.getElementById('imagenProducto').src;
              
                loadCanvas(productImage, firstImagen.split(';')[0]);
                if (document.getElementById("designerIlustration").checked) {
                    document.getElementById("divImageDesigner").style.display = 'block';
                    document.getElementById("divImageUser").style.display = 'none';
                } else {
                    document.getElementById("divImageDesigner").style.display = 'none';
                    document.getElementById("divImageUser").style.display = 'block';
                }

            }


            const resizeImages = (x, y) => {
                let yFixed = y ;
                let xFixed = x;
                if (yFixed > 550) {
                    yFixed = 550;
                }
                
                listenMove && !isVertical && loadCanvas(productImageSetted, userDesigImageSetted, { xFixed, yFixed });
            }

            document.getElementById("canvas").addEventListener('pointermove', e => {
                if (productImageSetted !== null && userDesigImageSetted !== null) {

                    resizeImages(e.offsetX, e.offsetY)
                }

            });

            document.getElementById("canvas").addEventListener('click', e => {
                if (listenMove) {
                    listenMove = false;
                } else {
                    listenMove = true;
                }
            })

            document.getElementById("userIlustration").addEventListener('change', async e => {
                if (e.target.checked) {

                    if (userDesigImageSetted !== null) {
                        const userImg = document.getElementById("userImage").files[0];
                        const userEncodedImg = await encoded(userImg);
                        loadCanvas(productImageSetted, userEncodedImg);
                    }
                    

                    document.getElementById("divImageUser").style.display = 'block';
                    document.getElementById("divImageDesigner").style.display = 'none';
                }
                
            });

            document.getElementById("designerIlustration").addEventListener('change', e => {
                if (e.target.checked) {
                    const designerImg = document.getElementById("PreviewImagen").src;
                    loadCanvas(productImageSetted, designerImg);
                    document.getElementById("divImageDesigner").style.display = 'block';
                    document.getElementById("divImageUser").style.display = 'none';
                }

            });
            
        </script>
    }
}

