@model Proyecto_FunCase_WEBLY.Models.ProductoDetalle

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Detalles";
}

@if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Empleado")))
{
<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Detalles</h3>
                <p class="text-subtitle text-muted">Visualiza los datos de la funda.</p>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end float-md-end float-sm-end">
                    <ol class="breadcrumb breadcrumb-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("IndexAdmin", "Home")">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Productos")">Fundas</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Detalles</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="page-content">
    <section class="section">
        <div class="row match-height">
            <div class="col-lg-6 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Funda: @Model.Producto.ProductoID</h4>
                    </div>
                    <div class="card-content">
                        <div class="card-body">
                            <form>
                                <div class="form-body">
                                    <div class="row">
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Nombre</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            <input type="text" value="@Model.Producto.Nombre" class="form-control" readonly />
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Total</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            <input type="text" value="@Model.Producto.Total" class="form-control" readonly />
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Stock</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            <input type="text" value="@Model.Producto.Stock" class="form-control" readonly />
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Estatus</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            @Html.DisplayFor(model => model.Producto.Estatus)
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <div class="col-12 d-flex justify-content-end">
                            @Html.ActionLink("Editar Modelo", "Edit", new { id = Model.Producto.ProductoID }, new { @class = "btn btn-info rounded-pill me-1 mb-1" })
                            @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-light-secondary rounded-pill me-1 mb-1" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Imagen de Referencia</h4>
                    </div>

                    <div class="card-content">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <img src="@Model.Producto.ImagenFinal" alt="Imagen del Modelo" style="height: 300px;" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
}
else
{

    <div class="col-lg-12 col-md-12 col-sm-12">
        <h2>@Model.Producto.Nombre</h2>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-4">
                <img class="img-responsive" src="@Model.Producto.ImagenFinal" alt="Imagen del Producto" id="imagenProducto" />
            </div>
            <div class="col-lg-6 col-md-6 col-sm-8">
                <h3>Datos del Producto</h3>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Nombre:</b> @Model.Producto.Nombre</p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Modelo:</b> @Model.Producto.Modelo.Nombre</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Material:</b> @Model.Producto.Material.Nombre</p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <p><b>Color:</b> @Model.Producto.Material.Color</p>
                    </div>
                </div>
                <hr />
                <h4>Imagen</h4>
                <div class="mb-3 row">
                    <label class="form-label col-lg-5 col-md-4 col-sm-4 col-form-label">Selecciona una imagen</label>
                    <div class="col-lg-7 col-md-8 col-sm-8">
                        <select id="Imagen" name="Imagen" class="form-control">
                            @foreach (var imagen in Model.Imagenes)
                            {
                                <option value="@imagen.Ruta;@imagen.ImagenID">@imagen.NombreImagen</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <img id="PreviewImagen" class="img-responsive" src="@Model.Imagenes.FirstOrDefault().Ruta" alt="Imagen" style="height: 150px;" />
                    </div>
                </div>
                <hr />

                <div class="row">
                    <input type="hidden" id="idProducto" value="@Model.Producto.ProductoID" />
                    <label class="form-label col-lg-3 col-md-3 col-sm-3 col-form-label">Cantidad:</label>
                    <div class="col-lg-4 col-md-4 col-sm-4">
                        <input type="number" class="form-control numbers" id="cantidad" min="0" step="1" value="1" />
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-3">
                        <button class="agregar btn btn-primary" id="btnAgregar">Agregar</button>
                    </div>
                </div>
                <canvas style="margin-top: 10px" width="500" height="600" id="canvas"></canvas>
            </div>
        </div>
    </div>

    @section Scripts
    {
        <script>
            $("#Imagen").on("change", function () {
                let data = this.value.split(";");
                let ruta = data[0];
                $("#PreviewImagen").attr("src", ruta)
            });

            $("#btnAgregar").on("click", function (evemt) {
                event.preventDefault();
                var ProductoId = $("#idProducto").val();
                var cantidad = $("#cantidad").val();
                var ImagenId = $("#Imagen").val().split(";")[1];

                $.ajax(
                {
                    url: "@Url.Action("AgregaCarrito", "Carrito")",
                    data: { idProducto: ProductoId, idImagen: ImagenId, cantidad: cantidad },
                    type: "POST",
                    success: function (response) {
                        window.location.href = "@Url.Action("AgregaCarrito", "Carrito")";
                    },
                        error: function (err, error) {
                            alert(err.responseText);
                    }
                });
            });

            //Método de validación para el campo de cantidad
            $(".numbers").keydown(function (e) {
                //alert(e.keyCode);
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 40]) !== -1 ||
                    (e.keyCode == 65 && e.ctrlkey === true) ||
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    return;
                }

                if ((e.shiftkey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 165)) {
                    e.preventDefault();
                }
            });

           

            const changeCanvasImage = async(e) => {
                console.log(e.target.value);
                const newImg = document.getElementById("PreviewImagen").src;
                //const canvas = document.getElementById('canvas');
                const productImage = document.getElementById('imagenProducto').src;
                loadCanvas(productImage, newImg)
            }

            const loadImage = url => {
                return new Promise((resolve, reject) => {
                    const img = new Image();
                    img.onload = () => resolve(img);
                    img.onerror = () => reject(new Error(`load ${url} fail`));
                    img.src = url;
                });
            };

            const loadCanvas = async(productImage, imageUrl) => {

                const canvas = document.getElementById('canvas');
                              
                const img1 = await loadImage(productImage);
                const ctx1 = canvas.getContext('2d');
                ctx1.drawImage(img1, 0, 0, 550, 500);
                const img2 = await loadImage(imageUrl)
                const ctx2 = canvas.getContext('2d');                                               
                ctx2.drawImage(img2, 165, 50, 210, 400);
               
            }


            document.getElementById("Imagen").addEventListener('change', changeCanvasImage);

            window.onload = () => {
                const firstImagen = document.getElementById('PreviewImagen').src;
                const productImage = document.getElementById('imagenProducto').src;
                console.log(productImage)
                loadCanvas(productImage,  firstImagen.split(';')[0]);
            }
        </script>
    }
}

