@model Proyecto_FunCase_WEBLY.Models.ProductoDetalle

@{
    ViewBag.Title = "Detalles";
}

@if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Empleado")))
{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";


<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Detalles</h3>
                <p class="text-subtitle text-muted">Visualiza los datos de la funda.</p>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end float-md-end float-sm-end">
                    <ol class="breadcrumb breadcrumb-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("IndexAdmin", "Home")">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Productos")">Fundas</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Detalles</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="page-content">
    <section class="section">
        <div class="row match-height">
            <div class="col-lg-6 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Funda: @Model.Producto.ProductoID</h4>
                    </div>
                    <div class="card-content">
                        <div class="card-body">
                            <form>
                                <div class="form-body">
                                    <div class="row">
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Nombre</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            <input type="text" value="@Model.Producto.Nombre" class="form-control" readonly />
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Total</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            <input type="text" value="@Model.Producto.Total" class="form-control" readonly />
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Stock</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            <input type="text" value="@Model.Producto.Stock" class="form-control" readonly />
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-6">
                                            <label>Estatus</label>
                                        </div>
                                        <div class="col-sm-8 col-md-7 col-lg-6 form-group">
                                            @Html.DisplayFor(model => model.Producto.Estatus)
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <div class="col-12 d-flex justify-content-end">
                            @Html.ActionLink("Editar Modelo", "Edit", new { id = Model.Producto.ProductoID }, new { @class = "btn btn-info rounded-pill me-1 mb-1" })
                            @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-light-secondary rounded-pill me-1 mb-1" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Imagen de Referencia</h4>
                    </div>

                    <div class="card-content">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <img src="@Model.Producto.ImagenFinal" alt="Imagen del Modelo" style="height: 300px;" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
}
else
{

<div class="col-lg-12 col-md-12 col-sm-12">
    <h2>@Model.Producto.Nombre</h2>
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-4">
            <canvas style="margin-top: 10px; z-index: 9999" width="500" height="600" id="canvas"></canvas>
            <img class="img-responsive" src="@Model.Producto.ImagenFinal" alt="Imagen del Producto" id="imagenProducto" style="display:none" />
            <div>
                        
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-8">
            <h3>Datos del Producto</h3>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <p><b>Nombre:</b> @Model.Producto.Nombre</p>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <p><b>Modelo:</b> @Model.Producto.Modelo.Nombre</p>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <p><b>Material:</b> @Model.Producto.Material.Nombre</p>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <p><b>Color:</b> @Model.Producto.Material.Color</p>
                </div>
            </div>
            <hr />
            <h4>Imagen</h4>
            <div class="row">
                <div class="col-md-6 col-sm-6">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="designerIlustration" checked>
                        <label class="form-check-label" for="flexRadioDefault1">
                            Usar la Ilustración del diseñador
                        </label>

                    </div>
                </div>
                <div class="col-md-6 col-sm-6">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="userIlustration">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Usar mi Ilustración / Imagen
                        </label>

                    </div>
                </div>
            </div>


            <div class="mb-3 row" id="divImageUser" style="display: none">
                <label class="form-label col-lg-5 col-md-4 col-sm-4 col-form-label">Sube tu imagen</label>
                <input type="file" class="form-control" id="userImage" />
            </div>
            <div class="mb-3 row" id="divImageDesigner">
                <label class="form-label col-lg-5 col-md-4 col-sm-4 col-form-label">Selecciona una imagen</label>
                <div class="col-lg-7 col-md-8 col-sm-8 mb-2">
                    <select id="Imagen" name="Imagen" class="form-control">
                        @foreach (var imagen in Model.Imagenes)
                            {
                        <option value="@imagen.Ruta;@imagen.ImagenID">@imagen.NombreImagen</option>
                            }
                    </select>
                </div>
                <div class="row">
                    <div class="col-12">
                        <img id="PreviewImagen" class="img-responsive" src="@Model.Imagenes.FirstOrDefault().Ruta" alt="Imagen" style="height: 150px;" />
                    </div>
                </div>
            </div>

            <hr />

            <div class="row">
                <input type="hidden" id="idProducto" value="@Model.Producto.ProductoID" />
                <label class="form-label col-lg-3 col-md-3 col-sm-3 col-form-label">Cantidad:</label>
                <div class="col-lg-4 col-md-4 col-sm-4">
                    <input type="number" class="form-control numbers" id="cantidad" min="0" step="1" value="1" />
                </div>
                <div class="col-lg-2 col-md-2 col-sm-3">
                    <button class="agregar btn btn-primary" id="btnAgregar">Agregar</button>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts
    {
    <script>
            document.getElementById("Imagen").onchange = () => {
                let data = document.getElementById("Imagen").value.split(";");
                let ruta = data[0];
                document.getElementById("PreviewImagen").src = ruta;
                }
                document.getElementById("btnAgregar").onclick = () => {
                    const ProductoId = document.getElementById("idProducto").value;
                    const cantidad = document.getElementById("cantidad").value;
                    let ImagenId = 0;
                    let customImage = null;
                    if (document.getElementById("designerIlustration").checked) {
                        ImagenId = document.getElementById("Imagen").value.split(";")[1];
                    } else {
                        const files = customImage = document.getElementById("userImage").files;
                        if (files.length === 0) {
                            return Toastify({
                                text: "Seleccione su imagen para la personalización",
                                duration: 3000,
                                close: true,
                                gravity: "top",
                                position: "right",
                                backgroundColor: "#f3616d",
                            }).showToast();
                        }
                        customImage = document.getElementById("canvas").toDataURL();

                    }

                    const formData = new FormData();
                    formData.append("idProducto", ProductoId);
                    formData.append("idImagen", ImagenId);
                    formData.append("cantidad", cantidad);
                    formData.append("customImage", customImage);

                    fetch("@Url.Action("AgregaCarrito", "Carrito")", {
                        method: 'POST',
                        body: formData
                    }).then(data => data.text()
                    ).then(data => {
                        window.location.href = "@Url.Action("AgregaCarrito", "Carrito")";
                    }).catch(error => console.log(error));
            }

            var productImageSetted = null;
            var userDesigImageSetted = null;
            var listenMove = true;
            var isVertical = true;
            var messageMoving = false;

            const encoded = (file) => {

                return new Promise((resolve, reject) => {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        //$('#blah').attr('src', e.target.result); // Renderizamos la imagen
                        resolve(e.target.result);
                    }
                    reader.readAsDataURL(file);
                })

            }


            const changeCanvasImage = async(e) => {
                let newImg = null;
                //const canvas = document.getElementById('canvas');
                if (e.target.id === "userImage") {

                    newImg = document.getElementById("userImage").files[0];
                    newImg = await encoded(newImg);

                } else {
                    newImg = document.getElementById("PreviewImagen").src;

                }

                const productImage = document.getElementById('imagenProducto').src;

                loadCanvas(productImage, newImg)
            }

            const loadImage = url => {
                return new Promise((resolve, reject) => {
                    const img = new Image();
                    img.onload = () => resolve(img);
                    img.onerror = () => reject(`load ${url} fail`);
                    img.src = url;
                });
            };

            const loadCanvas = async (productImage, newImage, newPositions = null ) => {
                productImageSetted = productImage;
                userDesigImageSetted = newImage;
                const canvas = document.getElementById('canvas');

                const img1 = await loadImage(productImage);
                const ctx1 = canvas.getContext('2d');
                ctx1.drawImage(img1, 0, 0, 492, 492);

                const img2 = await loadImage(newImage)
                const ctx2 = canvas.getContext('2d');

                const porcentajeHeight = (img2.height * 100) / img2.width;
                const relacion = 100 - porcentajeHeight; // = 30
                //console.log(newPositions)
                if (newPositions !== null) {
                    let { xFixed, yFixed } = newPositions;

                    if (relacion > 25) {
                        console.log(img2.height)
                        if (yFixed > img2.height) {

                            yFixed = img2.height;
                        }
                        isVertical = false;
                        showMessageHorizontal()
                        ctx2.drawImage(img2, xFixed , yFixed , 350, 150, 150, 160, 183, 150);
                    } else {
                        isVertical = true;
                        ctx2.drawImage(img2, 150, 50, 185, 400);
                    }
                } else {
                    if (relacion > 25) {
                        isVertical = false;
                        
                        showMessageHorizontal();
                        ctx2.drawImage(img2, 150, 50, 350, 150, 150, 160, 183, 150);
                    } else {
                        isVertical = true;
                        ctx2.drawImage(img2, 150, 50, 185, 400);
                    }
                }



            }

            document.getElementById("Imagen").addEventListener('change', changeCanvasImage);
            document.getElementById("userImage").addEventListener('change', changeCanvasImage);

            window.onload = () => {
                const firstImagen = document.getElementById('PreviewImagen').src;
                const productImage = document.getElementById('imagenProducto').src;

                loadCanvas(productImage, firstImagen.split(';')[0]);
                if (document.getElementById("designerIlustration").checked) {
                    document.getElementById("divImageDesigner").style.display = 'block';
                    document.getElementById("divImageUser").style.display = 'none';
                } else {
                    document.getElementById("divImageDesigner").style.display = 'none';
                    document.getElementById("divImageUser").style.display = 'block';
                }

            }


            const resizeImages = (x, y) => {
                let yFixed = y ;
                let xFixed = x;
                if (yFixed > 550) {
                    yFixed = 550;
                }

                listenMove && !isVertical && loadCanvas(productImageSetted, userDesigImageSetted, { xFixed, yFixed });
            }

            document.getElementById("canvas").addEventListener('pointermove', e => {
                if (productImageSetted !== null && userDesigImageSetted !== null) {

                    resizeImages(e.offsetX, e.offsetY)
                }

            });

            document.getElementById("canvas").addEventListener('click', e => {
                if (listenMove) {
                    listenMove = false;
                     !isVertical &&  Toastify({
                        text: "Ya no puedes Ajustar la imagen en la previsualización, da click en la imagen para volver a habilitarlo",
                        duration: 3000,
                        close: true,
                        gravity: "top",
                        position: "left",
                        backgroundColor: "#f3616d",
                    }).showToast();
                } else {
                    listenMove = true;
                    !isVertical &&  Toastify({
                        text: "Puedes Ajustar la Imagen en la previsualización :D, da click en la imagen para deshabilitar está acción",
                        duration: 4000,
                        close: true,
                        gravity: "top",
                        position: "left",
                        backgroundColor: "#4fbe87",
                    }).showToast();
                }
            })

            document.getElementById("userIlustration").addEventListener('change', async e => {
                if (e.target.checked) {

                    const userImg = document.getElementById("userImage").files;
                    if (userImg.length > 0) {
                        const userEncodedImg = await encoded(userImg[0]);
                        loadCanvas(productImageSetted, userEncodedImg);
                    }

                    document.getElementById("divImageUser").style.display = 'block';
                    document.getElementById("divImageDesigner").style.display = 'none';
                }

            });

            document.getElementById("designerIlustration").addEventListener('change', e => {
                if (e.target.checked) {
                    const designerImg = document.getElementById("PreviewImagen").src;
                    loadCanvas(productImageSetted, designerImg);
                    document.getElementById("divImageDesigner").style.display = 'block';
                    document.getElementById("divImageUser").style.display = 'none';
                }

            });

        const showMessageHorizontal = () => {
            !messageMoving && Toastify({
                text: "Ahora Moviendo el Mouse Puedes Ajustar la Imagen en la Previsualización",
                duration: 4000,
                close: true,
                gravity: "top",
                position: "left",
                backgroundColor: "#4fbe87",
            }).showToast();

            messageMoving = true;
        }

    </script>
}
}

